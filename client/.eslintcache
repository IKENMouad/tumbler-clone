[{"/home/miken/projects/tumblerclone/client/src/index.jsx":"1","/home/miken/projects/tumblerclone/client/src/Root.jsx":"2","/home/miken/projects/tumblerclone/client/src/App.jsx":"3","/home/miken/projects/tumblerclone/client/src/Nav.jsx":"4","/home/miken/projects/tumblerclone/client/src/Explore.jsx":"5","/home/miken/projects/tumblerclone/client/src/Personal.jsx":"6","/home/miken/projects/tumblerclone/client/src/Presentation.jsx":"7","/home/miken/projects/tumblerclone/client/src/Icon.jsx":"8","/home/miken/projects/tumblerclone/client/src/Search.jsx":"9","/home/miken/projects/tumblerclone/client/src/Timeline.jsx":"10","/home/miken/projects/tumblerclone/client/src/SidePanel.jsx":"11","/home/miken/projects/tumblerclone/client/src/ContentItem.jsx":"12","/home/miken/projects/tumblerclone/client/src/ContentPanel.jsx":"13","/home/miken/projects/tumblerclone/client/src/ModalAction.jsx":"14","/home/miken/projects/tumblerclone/client/src/ActionItem.jsx":"15","/home/miken/projects/tumblerclone/client/src/MyNav.jsx":"16","/home/miken/projects/tumblerclone/client/src/Auth.jsx":"17","/home/miken/projects/tumblerclone/client/src/SearchModal.jsx":"18","/home/miken/projects/tumblerclone/client/src/CreateModal.jsx":"19","/home/miken/projects/tumblerclone/client/src/services/auth.service.js":"20","/home/miken/projects/tumblerclone/client/src/utilities/handle-response.js":"21","/home/miken/projects/tumblerclone/client/src/utilities/history.js":"22","/home/miken/projects/tumblerclone/client/src/Profile.jsx":"23","/home/miken/projects/tumblerclone/client/src/chat/RightChat.jsx":"24","/home/miken/projects/tumblerclone/client/src/chat/Chat.jsx":"25","/home/miken/projects/tumblerclone/client/src/chat/Conversations.jsx":"26","/home/miken/projects/tumblerclone/client/src/chat/Users.jsx":"27","/home/miken/projects/tumblerclone/client/src/chat/ChatBox.jsx":"28","/home/miken/projects/tumblerclone/client/src/services/userService.js":"29","/home/miken/projects/tumblerclone/client/src/utilities/common.js":"30","/home/miken/projects/tumblerclone/client/src/utilities/auth-header.js":"31","/home/miken/projects/tumblerclone/client/src/shared/Header.jsx":"32","/home/miken/projects/tumblerclone/client/src/services/chatService.js":"33","/home/miken/projects/tumblerclone/client/src/Home.jsx":"34","/home/miken/projects/tumblerclone/client/src/posts/Posts.jsx":"35","/home/miken/projects/tumblerclone/client/src/users/Users.jsx":"36","/home/miken/projects/tumblerclone/client/src/shared/DataTable.jsx":"37"},{"size":172,"mtime":1629476436955,"results":"38","hashOfConfig":"39"},{"size":1474,"mtime":1629583614846,"results":"40","hashOfConfig":"39"},{"size":2058,"mtime":1629237227955,"results":"41","hashOfConfig":"39"},{"size":2976,"mtime":1629237227955,"results":"42","hashOfConfig":"39"},{"size":4312,"mtime":1629237227955,"results":"43","hashOfConfig":"39"},{"size":430,"mtime":1629237227955,"results":"44","hashOfConfig":"39"},{"size":593,"mtime":1629237227955,"results":"45","hashOfConfig":"39"},{"size":402,"mtime":1629237227955,"results":"46","hashOfConfig":"39"},{"size":2622,"mtime":1629233335434,"results":"47","hashOfConfig":"39"},{"size":4239,"mtime":1629580447737,"results":"48","hashOfConfig":"39"},{"size":2838,"mtime":1629237227955,"results":"49","hashOfConfig":"39"},{"size":2169,"mtime":1629579825526,"results":"50","hashOfConfig":"39"},{"size":3526,"mtime":1629580635093,"results":"51","hashOfConfig":"39"},{"size":4438,"mtime":1629237227955,"results":"52","hashOfConfig":"39"},{"size":413,"mtime":1629237227955,"results":"53","hashOfConfig":"39"},{"size":2294,"mtime":1629583444805,"results":"54","hashOfConfig":"39"},{"size":7122,"mtime":1629590826656,"results":"55","hashOfConfig":"39"},{"size":2025,"mtime":1629237220402,"results":"56","hashOfConfig":"39"},{"size":3706,"mtime":1629494546610,"results":"57","hashOfConfig":"39"},{"size":1989,"mtime":1629590711538,"results":"58","hashOfConfig":"39"},{"size":624,"mtime":1629590711538,"results":"59","hashOfConfig":"39"},{"size":114,"mtime":1629468362311,"results":"60","hashOfConfig":"39"},{"size":6490,"mtime":1629505813870,"results":"61","hashOfConfig":"39"},{"size":1489,"mtime":1629506168652,"results":"62","hashOfConfig":"39"},{"size":2575,"mtime":1629554440909,"results":"63","hashOfConfig":"39"},{"size":3380,"mtime":1629553385283,"results":"64","hashOfConfig":"39"},{"size":2053,"mtime":1629551155318,"results":"65","hashOfConfig":"39"},{"size":6518,"mtime":1629553411727,"results":"66","hashOfConfig":"39"},{"size":1167,"mtime":1629578711595,"results":"67","hashOfConfig":"39"},{"size":173,"mtime":1629468519227,"results":"68","hashOfConfig":"39"},{"size":389,"mtime":1629468494431,"results":"69","hashOfConfig":"39"},{"size":3170,"mtime":1629554077741,"results":"70","hashOfConfig":"39"},{"size":2597,"mtime":1629590711534,"results":"71","hashOfConfig":"39"},{"size":103,"mtime":1629562909690,"results":"72","hashOfConfig":"39"},{"size":2185,"mtime":1629590711530,"results":"73","hashOfConfig":"39"},{"size":82,"mtime":1629583541047,"results":"74","hashOfConfig":"39"},{"size":9914,"mtime":1629590711534,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"1tvddn0",{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"78"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"78"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"78"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"78"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"78"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"78"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"78"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"78"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"78"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"78"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"78"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"78"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/miken/projects/tumblerclone/client/src/index.jsx",[],["167","168"],"/home/miken/projects/tumblerclone/client/src/Root.jsx",["169"],"/home/miken/projects/tumblerclone/client/src/App.jsx",[],"/home/miken/projects/tumblerclone/client/src/Nav.jsx",["170","171","172","173","174","175","176","177"],"import React, { useState } from \"react\";\nimport { Fragment } from \"react\";\nimport { Container, Navbar, Nav, NavDropdown } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nexport default ({}) => {\n  const [toggleDropDown, setToggleDropDown] = useState(false);\n   const showToggleDropDown = () => {\n     setToggleDropDown((toggleDropDown = !toggleDropDown));\n   };\n\n  return (\n    <Fragment>\n      <nav className=\"navbar navbar-expand-md mx-5\">\n        <Link className=\"navbar-brand\" to=\"#\">\n          Navbar\n        </Link>\n        <button\n          className=\"navbar-toggler d-lg-none\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#collapsibleNavId\"\n          aria-controls=\"collapsibleNavId\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"collapsibleNavId\">\n          <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n            <li className=\"nav-item active\">\n              <Link className=\"nav-link\" to=\"#\">\n                Home <span className=\"sr-only\">(current)</span>\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to=\"#\">\n                Link\n              </Link>\n            </li>\n          </ul>\n\n          <ul className=\"navbar-nav ml-auto mt-2 mt-lg-0\">\n            <li className=\"nav-item dropdown\">\n              <a\n                onClick={() => showToggleDropDown}\n                className={`nav-link dropdown-toggle ${\n                  toggleDropDown ? \"show\" : null\n                } `}\n                id=\"dropdownId\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n              >\n                Dropdown\n              </a>\n              <div className=\"dropdown-menu\" aria-labelledby=\"dropdownId\">\n                <Link className=\"dropdown-item\" to=\"#\">\n                  Action 1\n                </Link>\n                <Link className=\"dropdown-item\" to=\"#\">\n                  Action 2\n                </Link>\n              </div>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </Fragment>\n  );\n};\n\n// <Nav>\n//   <NavComponent>\n//     <NavItem>\n//       <StyledLink to=\"/\">A</StyledLink>\n//     </NavItem>\n//     <NavForm>#001935\n//       <Search />\n//     </NavForm>\n//   </NavComponent>\n//   <NavComponent>\n//     <NavItem>\n//       <StyledLink to=\"/explore\">\n//         <BsHouse></BsHouse>\n//       </StyledLink>\n//     </NavItem>\n//     <NavItem>\n//       <StyledLink to=\"/explore\">EX</StyledLink>\n//     </NavItem>\n//     <NavItem>\n//       <StyledLink to=\"/explore\">EX</StyledLink>\n//     </NavItem>\n//     <NavUserItem>\n//       <Icon>R</Icon>\n//       <UserDetails>\n//         Mouad <br />\n//       </UserDetails>\n//     </NavUserItem>\n//   </NavComponent>\n// </Nav>\n",["178","179"],"/home/miken/projects/tumblerclone/client/src/Explore.jsx",[],"/home/miken/projects/tumblerclone/client/src/Personal.jsx",[],"/home/miken/projects/tumblerclone/client/src/Presentation.jsx",["180"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport Timeline from \"./Timeline.jsx\";\nimport SidePanel from \"./SidePanel.jsx\";\n\nconst Presentation = styled.div`\n  display: flex;\n  background: #001935; \n  margin: 0 auto;\n\n  @media (min-width: 450px) {\n    width: 100%;\n    min-width: 450px;\n  }\n\n  @media (min-width: 700px) {\n    width: 100%;\n    min-width: 700px;\n  }\n\n  @media (min-width: 1200px) {\n    width: 1024px;\n  }\n`;\n\n\nexport default ({content}) => {\n  return (\n    <Presentation>\n      <Timeline content={content} />\n      <SidePanel />\n    </Presentation>\n  );\n}","/home/miken/projects/tumblerclone/client/src/Icon.jsx",["181"],"import React from \"react\";\nimport styled from \"styled-components\";\n\nexport default ({\n  background = \"#343434\",\n  color = \"white\",\n  size = \"2vw\",\n  children,\n}) => {\n  const Icon = styled.div`\n    height: ${size};\n    width: ${size};\n    background: ${background};\n    color: ${color};\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  `;\n\n  return <Icon>{children}</Icon>;\n};","/home/miken/projects/tumblerclone/client/src/Search.jsx",["182"],"import React from \"react\";\nimport styled from \"styled-components\";\n\n\nconst Search = styled.div`\n    display: flex;    \n    position: relative;    \n    z-index:10;\n`;\n\nconst SearchDropdownContainer = styled.div`\n    display: none;        \n    position: absolute;\n    top: 5.5vh;\n    background: white;\n    width: 50vh;\n    height: 25vh;    \n    border: 1px solid rgba(0,0,0,0.1);    \n\n    &:hover {\n        display: block;\n    }  \n`;\n\nconst SearchItems = styled.div`\n    height: 5vh;\n    display: flex;\n    flex-direction: column;   \n    justify-content: center;        \n`;\n\nconst SearchItemContainer = styled.div`\n    background: white;\n    display: flex;        \n`;\nconst SearchAvatarContainer = styled.div`        \n    height: 4vh;\n    width: 4vh;\n    background: #343434;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\nconst SearchAvatarContent = styled.div`    \n    color: white;    \n`;\n\nconst SearchTitleContainer = styled.div`\n    display: flex;\n    align-items: center;\n    margin-left: 1vh;    \n`;\nconst SearchTitleContent = styled.a`  \n    text-decoration: none;\n    background: white;\n`;\n\nconst SearchInput = styled.input`     \n    width: 50vh;\n    box-sizing: border-box;\n    font-size: 20px;\n    padding-left: 2vh;\n    border: 2px solid transparent;    \n    \n    &:focus ~ ${SearchDropdownContainer} {\n        display: block;\n    }\n    \n    &:focus{\n        border-bottom: 2px solid black;\n        outline: none;\n    }  \n`;\n\nconst dummy = [\"Namtab\", \"Batman\", \"Robin\", \"Nightwing\", \"Signal\"];\n\nexport default () => {\n    return (\n        <Search>\n            <SearchInput type = \"text\" placeholder = \"Search\"/>                                            \n            <SearchDropdownContainer>\n                {\n                dummy.map((content, index) => {\n                    return (\n                        <SearchItems>\n                            <SearchItemContainer>\n                                <SearchAvatarContainer>\n                                    <SearchAvatarContent>{index}</SearchAvatarContent>                                    \n                                </SearchAvatarContainer>\n                                <SearchTitleContainer>\n                                    <SearchTitleContent href = \"http://www.engadget.com\">{content}</SearchTitleContent>\n                                </SearchTitleContainer>\n                            </SearchItemContainer>\n                        </SearchItems>\n                    );\n                })\n                }                       \n            </SearchDropdownContainer>\n        </Search>\n    );\n}","/home/miken/projects/tumblerclone/client/src/Timeline.jsx",["183","184","185","186","187"],"/home/miken/projects/tumblerclone/client/src/SidePanel.jsx",["188","189"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport uuid from \"uuid\";\nimport data from \"./data.json\";\nimport Icon from \"./Icon.jsx\";\nimport { AdSection } from \"./ContentItem.jsx\";\n\n\n\nconst FixedContainer = styled.div`\n  width: 30%;\n  margin-top: 2rem;\n  flex-direction: column;\n  font-family: Helvetica;\n  display: block;\n  // position: fixed;\n  @media (min-width: 450px) {\n    display: none;\n  }\n  @media (min-width: 1200px) {\n    display: flex;\n  }\n`;\n\nconst Section = styled.div`\n  width: 100%;\n`;\n\nconst SectionContent = styled.div`\n  margin: 0 auto;\n  margin-bottom: 2vw;\n`;\n\nconst SectionTitle = styled.div`\n  border-bottom: 3px solid #00B8ff;\n  font-weight: bold;\n  padding-bottom: 1vh;\n  margin-bottom: 1vh;\n  color: white;\n  font-family: \"Favorit\", \"Helvetica Neue\", \"HelveticaNeue\", Helvetica, Arial,\n    sans-serif;\n`;\n\nconst ItemSubscribe = styled.div`\n  color: #00B8ff;\n  text-align: center;\n  margin: 5px;\n`;\n\nconst Item = styled.div`\n  display: flex;\n  padding: 0.5vw 0vw;\n  justify-content: space-between;\n\n  &:hover {\n    background: rgba(0, 0, 0, 0.1);\n  }\n\n  &:hover ${ItemSubscribe} {\n    text-decoration: underline;\n  }\n`;\nconst ItemDetails = styled.div`\n  display: flex;\n`;\n\nconst ItemTextContainer = styled.div`\n  padding-left: 1vh;\n`;\nconst TextTitle = styled.div`\n  font-weight: 600;\n  color: white;\n`;\nconst TextSubtitle = styled.div`\n  font-size: 11px;\n  color: white;\n`;\nconst ExpoloreMore = styled.div`\n  cursor: pointer;\n  color: #00B8ff;\n  font-size: 1rem;\n  font-weight: 400;\n  line-height: 1.5;\n  text-decoration: none;\n  margin-top: 15px;\n  display: inline-block;\n`;\nexport default ({}) => {\n  return (\n    // <RootContainer>\n      <FixedContainer>\n        <Section key={uuid.v4()}>\n          <SectionTitle> Check out these blogs </SectionTitle>\n          <SectionContent>\n            {data.data.slice(0, 5).map((item) => {\n              return (\n                <Item key={uuid.v4()}>\n                  <ItemDetails>\n                    <Icon>{item.name[0]}</Icon>\n                    <ItemTextContainer>\n                      <TextTitle>{item.name}</TextTitle>\n                      <TextSubtitle>{item.occupation}</TextSubtitle>\n                    </ItemTextContainer>\n                  </ItemDetails>\n                  <ItemSubscribe>Follow</ItemSubscribe>\n                </Item>\n              );\n            })}\n\n            <ExpoloreMore>Expolore more</ExpoloreMore>\n          </SectionContent>\n        </Section>\n        <Section key={uuid.v4()}>\n          <SectionTitle>Radar</SectionTitle>\n          <SectionContent>\n            <AdSection\n              author=\"Mouad\"\n              height=\"40\"\n              title=\"Ad TITLE that does stuff and stuff.\"\n            />\n          </SectionContent>\n        </Section>\n      </FixedContainer>\n    // </RootContainer>\n  );\n};\n","/home/miken/projects/tumblerclone/client/src/ContentItem.jsx",["190","191","192"],"/home/miken/projects/tumblerclone/client/src/ContentPanel.jsx",["193"],"/home/miken/projects/tumblerclone/client/src/ModalAction.jsx",["194"],"import React, { useRef, useEffect, useCallback } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport styled from 'styled-components';\nimport { MdClose } from 'react-icons/md';\nimport ActionItem from './ActionItem.jsx';\n\nconst Background = styled.div`\n  position: absolute;\n  background: #001935;\n  display: flex;\n  justify-content: center;\n  border-radius: 10px;\n  align-items: center;\n  @media (min-width: 450px) {\n    left: 73.2%;\n    top: 13%;\n  }\n  @media (min-width: 1200px) {\n    left: 61.1%;\n    top: 12.4%;\n  }\n`;\n   \nconst ModalWrapper = styled.div`\n  box-shadow: 0 5px 16px rgba(0, 0, 0, 0.2);\n  background: #fff;\n  color: #000;\n  z-index: 10;\n  border-radius: 10px;\n  `;\n  \n  const ModalContent = styled.div`\n  width: 13rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  line-height: 1.8;\n  color: #141414;\n  p {\n    margin-bottom: 1rem;\n  }\n  button {\n    padding: 10px 24px;\n    background: #141414;\n    color: #fff;\n    border: none;\n  }\n`;\n\nconst CloseModalButton = styled(MdClose)`\n  cursor: pointer;\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  width: 32px;\n  height: 32px;\n  padding: 0;\n  z-index: 10;\n`;\n\n const ModalAction = ({ id, showModal, setShowModal }) => {\n   const modalRef = useRef();\n\n   const animation = useSpring({\n     config: {\n       duration: 300,\n     },\n     opacity: showModal ? 1 : 0,\n     transform: showModal ? `translateY(0%)` : `translateY(-100%)`,\n   });\n\n   const closeModal = (e) => {\n     setShowModal(false);\n   };\n\n   const keyPress = useCallback(\n     (e) => {\n       if (\n         showModal &&\n         (e.key === \"Escape\" || e.key === \"ArrowDown\" || e.key === \"ArrowUp\")\n       ) {\n         setShowModal(false);\n       }\n     },\n     [setShowModal, showModal]\n   );\n\n   const getActionHandler = (event, { action }) => {\n      switch (action) {\n        case \"created-at\":\n          break;\n\n        case \"copy-link\":\n          navigator.clipboard\n            .writeText(\"Copy this text to clipboard\")\n          break;\n\n        case \"hide-post\":\n          break;\n        case \"report\":\n          break;\n        case \"block\":\n          break;\n        case \"close\":\n          closeModal(event);\n          break;\n        default:\n          closeModal(event);\n          break;\n      }\n   };\n\n   useEffect(() => {\n     document.addEventListener(\"keydown\", keyPress);\n     return () => document.removeEventListener(\"keydown\", keyPress);\n   }, [keyPress]);\n\n   return (\n     <div>\n       {showModal ? (\n         <Background onClick={closeModal} ref={modalRef}>\n           <animated.div style={animation}>\n             <ModalWrapper showModal={showModal}>\n               <ModalContent>\n                 <ActionItem\n                   getActionHandler={(event, data) => getActionHandler(event, data)}\n                   action=\"created-at\"\n                   label=\"Posted - Friday 5:33PM\"\n                   color=\"black\"\n                   hasButtom={true}\n                 />\n                 <div style={{ border: \"1px ridge\", width: \"100%\" }}></div>\n                 <ActionItem\n                   getActionHandler={(event, data) => getActionHandler(event, data)}\n                   action=\"copy-link\"\n                   label=\"Copy link\"\n                   color=\"black\"\n                 />\n                 <ActionItem\n                   getActionHandler={(event, data) => getActionHandler(event, data)}\n                   action=\"hide-post\"\n                   label=\"hide this post\"\n                   color=\"black\"\n                 />\n                 <ActionItem\n                   getActionHandler={(event, data) => getActionHandler(event, data)}\n                   action=\"report\"\n                   label=\"Report\"\n                   color=\"red\"\n                 />\n                 <ActionItem\n                   getActionHandler={(event, data) => getActionHandler(event, data)}\n                   action=\"block\"\n                   label=\"Block\"\n                   color=\"red\"\n                 />\n                 <ActionItem\n                   getActionHandler={(event, data) => getActionHandler(event, data)}\n                   action=\"close\"\n                   label=\"Close\"\n                   color=\"red\"\n                 />\n               </ModalContent>\n             </ModalWrapper>\n           </animated.div>\n         </Background>\n       ) : null}\n     </div>\n   );\n };\n\nexport default ModalAction;","/home/miken/projects/tumblerclone/client/src/ActionItem.jsx",[],"/home/miken/projects/tumblerclone/client/src/MyNav.jsx",["195","196","197"],"/home/miken/projects/tumblerclone/client/src/Auth.jsx",["198","199","200","201"],"/home/miken/projects/tumblerclone/client/src/SearchModal.jsx",["202"],"import ReactCircleModal from 'react-circle-modal'\nimport Search from \"./img/search-icon.png\";\nimport styled from 'styled-components'\nimport { AiOutlineClose } from \"react-icons/ai\";\nimport { useState } from 'react';\n\nconst SearchModal = ({ }) => {\n    const [query, setQuery] = useState('')\n\n    const searchHandel = (e) => {\n        if (e.key === 'Enter') {\n            console.log('enter key::', query)\n        }\n    }\n\n    return (\n        <ReactCircleModal\n            backgroundColor=\"#53555fe6\"\n            toogleComponent={onClick => (\n                <img onClick={onClick} src={Search} alt=\"search-icon.png\" />\n            )}\n            // Optional fields and their default values\n            offsetX={0}\n            offsetY={0}\n        >\n            {(onClick) => (\n                <div className=\"d-flex justify-content-between align-items-center\" style={{ padding: '1em' }}>\n                    <div></div>\n                    <div   >\n                        <SearchInput>\n                            <Input placeholder=\"Search...\"\n                                value={query}\n                                onChange={(e) => setQuery(e.target.value)}\n                                onKeyDown={e => searchHandel(e)}\n                            />\n                        </SearchInput>\n                    </div>\n\n                    <div className=\"close-modal\" onClick={onClick} >\n                        <AiOutlineClose style={{ fontSize: '40px', color: 'white', cursor: 'pointer' }} />\n                    </div>\n                </div>\n            )}\n        </ReactCircleModal>\n\n    )\n}\n\nexport default SearchModal\n\nconst SearchInput = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background: #2d2e33;\n  border-radius: 2.5rem;\n  margin-top: 17px;\n  height: 66px;\n  width: 40rem;\n`;\nconst Input = styled.input`\n  outline: none;\n  border: none; \n  color: #fff;\n  min-width: 90%;\n  background: none;\n  font-size: 24px;\n  &::placeholder {\n    color: #828387;\n  }\n`;","/home/miken/projects/tumblerclone/client/src/CreateModal.jsx",["203","204","205","206"],"import ReactCircleModal from 'react-circle-modal'\nimport { BsPencil } from \"react-icons/bs\";\nimport styled from 'styled-components'\nimport { AiOutlineTwitter, AiFillFacebook, AiOutlineGithub, AiFillYoutube, AiFillInstagram, AiOutlineClose } from \"react-icons/ai\";\nimport { useRef, useState } from 'react';\n\n\nconst CreateModal = () => {\n    const ref = useRef();\n    const [showModal, setShowModal] = useState(false); \n\n\n    return (\n        <ReactCircleModal\n            backgroundColor=\"#53555fe6\"\n            toogleComponent={onClick => (\n                <a onClick={onClick} href=\"#\"   >\n                    <BsPencil style={{ color: '#00b8ff', fontSize: '20px', cursor: 'pointer' }} />\n                </a>\n            )}\n            offsetX={0}\n            offsetY={0}\n        >\n            {(onClick) => (\n                <CenterScreen>\n                    <div className=\"wrapper\">\n\n                        <div className=\"icon\">\n                            <div className=\"type facebook\">\n                                <div className=\"tooltip\">Facebook</div>\n                                <span> <AiFillFacebook style={{ fontSize: '50px' }} /> </span>\n                            </div>\n                            <span className=\"icon-label\" >Facebook</span>\n                        </div>\n                        <div className=\"icon \">\n                            <div className=\"type twitter\" >\n                                <div className=\"tooltip\">Twitter</div>\n                                <span> <AiOutlineTwitter style={{ fontSize: '50px' }} /> </span>\n                            </div>\n                            <span className=\"icon-label\" > Twitter</span>\n                        </div>\n                        <div className=\"icon\">\n                            <div className=\"type instagram\" >\n                                <div className=\"tooltip\">Instagram</div>\n                                <span> <AiFillInstagram style={{ fontSize: '50px' }} /> </span>\n                            </div>\n                            <span className=\"icon-label\" >Instagram</span>\n                        </div>\n                        <div className=\"icon\">\n                            <div className=\"type github\" >\n                                <div className=\"tooltip\">Github</div>\n                                <span> <AiOutlineGithub style={{ fontSize: '50px' }} /> </span>\n                            </div>\n                            <span className=\"icon-label\" >Github</span>\n                        </div>\n                        <div className=\"icon\">\n                            <div className=\"type youtube\" >\n                                <div className=\"tooltip\">Youtube</div>\n                                <span><AiFillYoutube style={{ fontSize: '50px' }} /></span>\n                            </div>\n                            <span className=\"icon-label\" >Youtube</span>\n                        </div>\n                        <div className=\"vl\"></div>\n                        <div className=\"close-icon icon\" onClick={onClick} >\n                            <div className=\"type\" >\n                                <div className=\"tooltip\">Youtube</div>\n                                <span><AiOutlineClose style={{ fontSize: '50px', color: 'red' }} /></span>\n                            </div>\n                        </div>\n                    </div>\n                </CenterScreen>\n            )}\n        </ReactCircleModal>\n\n    )\n}\n\nexport default CreateModal\n\nconst CenterScreen = styled.div`\n    position: absolute;\n    top: 35%;\n    width: 95rem; \n    height: 100px;\n    display:flex ;\n    justify-content:center; \n    align-items:center; \n`\n","/home/miken/projects/tumblerclone/client/src/services/auth.service.js",[],"/home/miken/projects/tumblerclone/client/src/utilities/handle-response.js",[],"/home/miken/projects/tumblerclone/client/src/utilities/history.js",[],"/home/miken/projects/tumblerclone/client/src/Profile.jsx",["207","208"],"import { useRef } from 'react';\nimport ReactCircleModal from 'react-circle-modal'\nimport { AiOutlineClose } from \"react-icons/ai\";\nimport styled from \"styled-components\";\n\nimport { useEffect, useState } from \"react\";\nimport styles from \"./styles/profile.module.scss\";\nimport { authenticationService } from \"./services/auth.service\";\nimport RightChat from './chat/RightChat';\n\nconst Profile = ({ match }) => {\n  const [userId, setUserId] = useState(\"\");\n  const [photos, setPhotos] = useState([\n    {\n      id: \"1\",\n      image:\n        \"https://d19m59y37dris4.cloudfront.net/university/1-1-1/img/teacher-4.jpg\",\n    },\n    {\n      id: \"2\",\n      image:\n        \"https://d19m59y37dris4.cloudfront.net/university/1-1-1/img/teacher-4.jpg\",\n    },\n    {\n      id: \"3\",\n      image:\n        \"https://d19m59y37dris4.cloudfront.net/university/1-1-1/img/teacher-4.jpg\",\n    },\n    {\n      id: \"4\",\n      image:\n        \"https://d19m59y37dris4.cloudfront.net/university/1-1-1/img/teacher-4.jpg\",\n    },\n  ]);\n\n  useEffect(() => {\n    const { userId } = match.params;\n    if (!userId) {\n      authenticationService.currentUser.subscribe((res) => {\n        if (res && res._id) setUserId(res._id);\n      });\n    }\n  }, []);\n\n  return (\n    <div>\n      {userId ? (\n        <div className={styles.userProfile}>\n          <div className=\"mx-3\">\n            <div className=\"col-12 col-md-12 col-sm-12 \">\n              <div className=\"bg-white shadow rounded \">\n                <div\n                  className={styles.header}\n                  style={{\n                    paddingTop: \"8rem 0px \",\n                    paddingBottom: \"8rem !important\",\n                  }}\n                >\n                  <div className=\"media align-items-end profile-header\">\n                    <div\n                      className=\"profile mr-3\"\n                      style={{\n                        position: \"absolute\",\n                        top: \"22%\",\n                        left: \"45%\",\n                      }}\n                    >\n                      <img\n                        alt=\"\"\n                        src=\"https://d19m59y37dris4.cloudfront.net/university/1-1-1/img/teacher-4.jpg\"\n                        width=\"130\"\n                        className=\"my-2\"\n                        style={{ borderRadius: \"50%\" }}\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"bg-light py-4 px-4  d-flex justify-content-between  align-items-content  \">\n                  <div className=\"media-body  \">\n                    <h4 className=\"mt-0  user-name\">Manuella Tarly</h4>\n                    <p className=\"small mb-4\">\n                      <i className=\"fa fa-map-marker mr-2\"></i>San Farcisco\n                    </p>\n                    <div className=\"d-inline mx-2 \">\n                      <span className={styles.followProfile}>\n                        <RightChat label=\"Follow\"  />\n                      </span>\n                    </div>\n                    <div className=\"d-inline mx-2 \">\n                      <span className={styles.followProfile}>Message</span>\n                    </div>\n                  </div>\n                  <ul className=\"list-inline \">\n                    <li className=\"list-inline-item\">\n                      <h5 className=\"font-weight-bold mb-0 d-block\">241</h5>\n                      <small className=\"text-muted\">\n                        <i className=\"fa fa-picture-o mr-1\"></i>Photos\n                      </small>\n                    </li>\n                    <li className=\"list-inline-item\">\n                      <h5 className=\"font-weight-bold mb-0 d-block\">84K</h5>\n                      <small className=\"text-muted\">\n                        <i className=\"fa fa-user-circle-o mr-1\"></i>Followers\n                      </small>\n                    </li>\n                  </ul>\n                </div>\n\n                <div className=\"py-4 px-4\">\n                  <div className=\"d-flex align-items-center justify-content-between mb-3\">\n                    <h5 className=\"mb-0\">Recent photos</h5>\n\n                    <ItemListModal\n                      label=\"Show all\"\n                      from=\"photos\"\n                      photos={photos}\n                    />\n                  </div>\n                  <div className=\"row\">\n                    {photos.map((photo) => (\n                      <div className=\"col-lg-3\" key={photo.id}>\n                        <img\n                          src={photo.image}\n                          alt=\"img-fluid\"\n                          width=\"300\"\n                          className=\"img-fluid rounded\"\n                        />\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        \"loading\"\n      )}\n    </div>\n  );\n};\n\nexport default Profile\n\n\nconst ItemListModal = ({ label, photos, from }) => {\n  const ref = useRef(\"\");\n  return (\n    <ReactCircleModal\n      backgroundColor=\"#001935\"\n      ref={ref}\n      toogleComponent={(onClick) => (\n        <span\n          style={{ color: \"#00b8ff\", cursor: \"pointer\" }}\n          onClick={onClick}\n          className=\"btn btn-link \"\n        >\n          {label}\n        </span>\n      )}\n      offsetX={0}\n      offsetY={0}\n    >\n      {(onClick) => (\n        <Container>\n          <div\n            style={{\n              cursor: \"pointer\",\n              textAlign: \"right\",\n              position: \"relative\",\n            }}\n            className=\"close-modal\"\n            onClick={onClick}\n          >\n            <AiOutlineClose\n              style={{\n                position: \"fixed\",\n                right: \"1rem\",\n                fontSize: \"40px\",\n                cursor: \"pointer\",\n                color: \"white\",\n              }}\n            />\n          </div>\n          <div className=\"row\">\n            {photos.map((photo, index) => (\n              <div className=\"col-lg-3 my-2\" key={index}>\n                <img\n                  src={photo.image}\n                  alt=\"img-fluid\"\n                  width=\"300\"\n                  className=\"img-fluid rounded\"\n                />\n              </div>\n            ))}\n          </div>\n        </Container>\n      )}\n    </ReactCircleModal>\n  );\n};\n\n\nconst Container = styled.div`\n background-color: #001935;\n margin-left: 1rem;\n margin-right: 1rem;\n position: relative;\n`;\n","/home/miken/projects/tumblerclone/client/src/chat/RightChat.jsx",[],"/home/miken/projects/tumblerclone/client/src/chat/Chat.jsx",["209","210"],"import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\n// import Header from \"../shared/Header\";\nimport ChatBox from './ChatBox';\nimport Conversations from './Conversations';\nimport Users from './Users';\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        minHeight: 'calc(100vh - 64px)',\n        borderRadius: 0,\n    },\n    sidebar: {\n        zIndex: 8,\n    },\n    subheader: {\n        display: 'flex',\n        alignItems: 'center',\n        cursor: 'pointer',\n    },\n    globe: {\n        backgroundColor: theme.palette.primary.dark,\n    },\n    subheaderText: {\n        color: theme.palette.primary.dark,\n    },\n}));\n\nconst Chat = () => {\n    const [scope, setScope] = useState('Global Chat');\n    const [tab, setTab] = useState(0);\n    const [user, setUser] = useState(null);\n    const classes = useStyles();\n\n    const handleChange = (e, newVal) => {\n        setTab(newVal);\n    };\n\n    return (\n        <React.Fragment>\n            {/* <Header /> */}\n            <Grid container>\n                <Grid item md={4} className={classes.sidebar}>\n                    <Paper className={classes.paper} square elevation={5}>\n                        <Paper square>\n                            <Tabs\n                                onChange={handleChange}\n                                variant=\"fullWidth\"\n                                value={tab}\n                                indicatorColor=\"primary\"\n                                textColor=\"primary\"\n                            >\n                                <Tab label=\"Chats\" />\n                                <Tab label=\"Users\" />\n                            </Tabs>\n                        </Paper>\n                        {tab === 0 && (\n                            <Conversations\n                                setUser={setUser}\n                                setScope={setScope}\n                            />\n                        )}\n                        {tab === 1 && (\n                            <Users setUser={setUser} setScope={setScope} />\n                        )}\n                    </Paper>\n                </Grid>\n                <Grid item md={8}>\n                    <ChatBox scope={scope} user={user} />\n                </Grid>\n            </Grid>\n        </React.Fragment>\n    );\n};\n\nexport default Chat;\n","/home/miken/projects/tumblerclone/client/src/chat/Conversations.jsx",["211"],"import React, { useState, useEffect } from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport LanguageIcon from \"@material-ui/icons/Language\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport socketIOClient from \"socket.io-client\";\n\nimport { useGetConversations } from \"../services/chatService\";\nimport { authenticationService } from \"../services/auth.service\";\nimport commonUtilites from \"../utilities/common\";\n\nconst useStyles = makeStyles((theme) => ({\n  subheader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    cursor: \"pointer\",\n  },\n  globe: {\n    backgroundColor: theme.palette.primary.dark,\n  },\n  subheaderText: {\n    color: theme.palette.primary.dark,\n  },\n  list: {\n    maxHeight: \"calc(100vh - 112px)\",\n    overflowY: \"auto\",\n  },\n}));\n\nconst Conversations = (props) => {\n  const classes = useStyles();\n  const [conversations, setConversations] = useState([]);\n  const [newConversation, setNewConversation] = useState(null);\n  const getConversations = useGetConversations();\n\n  // Returns the recipient name that does not\n  // belong to the current user.\n  const handleRecipient = (recipients) => {\n    for (let i = 0; i < recipients.length; i++) {\n      if (\n        recipients[i].username !==\n        authenticationService.currentUserValue.username\n      ) {\n        return recipients[i];\n      }\n    }\n    return null;\n  };\n\n  useEffect(() => {\n    getConversations().then((res) => setConversations(res));\n  }, [newConversation]);\n\n  useEffect(() => {\n    let socket = socketIOClient(process.env.REACT_APP_API_URL);\n    socket.on(\"messages\", (data) => setNewConversation(data));\n\n    return () => {\n      socket.removeListener(\"messages\");\n    };\n  }, []);\n\n  return (\n    <List className={classes.list}>\n      <ListItem\n        classes={{ root: classes.subheader }}\n        onClick={() => {\n          props.setScope(\"Global Chat\");\n        }}\n      >\n        <ListItemAvatar>\n          <Avatar className={classes.globe}>\n            <LanguageIcon />\n          </Avatar>\n        </ListItemAvatar>\n        <ListItemText className={classes.subheaderText} primary=\"Global Chat\" />\n      </ListItem>\n      <Divider />\n\n      {conversations && (\n        <React.Fragment>\n          {conversations.map((c) => (\n            <ListItem\n              className={classes.listItem}\n              key={c._id}\n              button\n              onClick={() => {\n                props.setUser(handleRecipient(c.recipientObj));\n                props.setScope(handleRecipient(c.recipientObj).name);\n              }}\n            >\n              <ListItemAvatar>\n                <Avatar>\n                  {commonUtilites.getInitialsFromName(\n                    handleRecipient(c.recipientObj).name\n                  )}\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText\n                primary={handleRecipient(c.recipientObj).name}\n                secondary={<React.Fragment>{c.lastMessage}</React.Fragment>}\n              />\n            </ListItem>\n          ))}\n        </React.Fragment>\n      )}\n    </List>\n  );\n};\n\nexport default Conversations;\n","/home/miken/projects/tumblerclone/client/src/chat/Users.jsx",["212"],"import React, { useState, useEffect } from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport socketIOClient from \"socket.io-client\";\n\nimport { useGetUsers } from \"../services/userService\";\nimport commonUtilites from \"../utilities/common\";\n\nconst useStyles = makeStyles((theme) => ({\n  subheader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    cursor: \"pointer\",\n  },\n  globe: {\n    backgroundColor: theme.palette.primary.dark,\n  },\n  subheaderText: {\n    color: theme.palette.primary.dark,\n  },\n  list: {\n    maxHeight: \"calc(100vh - 112px)\",\n    overflowY: \"auto\",\n  },\n  avatar: {\n    margin: theme.spacing(0, 3, 0, 1),\n  },\n}));\n\nconst Users = (props) => {\n  const classes = useStyles();\n  const [users, setUsers] = useState([]);\n  const [newUser, setNewUser] = useState(null);\n  const getUsers = useGetUsers();\n\n  useEffect(() => {\n    getUsers().then((res) => setUsers(res));\n  }, [newUser]);\n\n  useEffect(() => {\n    const socket = socketIOClient(process.env.REACT_APP_API_URL);\n    socket.on(\"users\", (data) => {\n      setNewUser(data);\n    });\n  }, []);\n\n  return (\n    <List className={classes.list}>\n      {users && (\n        <React.Fragment>\n          {users.map((u) => (\n            <ListItem\n              className={classes.listItem}\n              key={u._id}\n              onClick={() => {\n                props.setUser(u);\n                props.setScope(u.name);\n              }}\n              button\n            >\n              <ListItemAvatar className={classes.avatar}>\n                <Avatar>{commonUtilites.getInitialsFromName(u.name)}</Avatar>\n              </ListItemAvatar>\n              <ListItemText primary={u.name} />\n            </ListItem>\n          ))}\n        </React.Fragment>\n      )}\n    </List>\n  );\n};\n\nexport default Users;\n","/home/miken/projects/tumblerclone/client/src/chat/ChatBox.jsx",["213"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Paper from \"@material-ui/core/Paper\";\nimport socketIOClient from \"socket.io-client\";\nimport classnames from \"classnames\";\nimport commonUtilites from \"../utilities/common\";\nimport {\n  useGetGlobalMessages,\n  useSendGlobalMessage,\n  useGetConversationMessages,\n  useSendConversationMessage,\n} from \"../services/chatService\";\nimport { authenticationService } from \"../services/auth.service\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100%\",\n  },\n  headerRow: {\n    maxHeight: 60,\n    zIndex: 5,\n  },\n  paper: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: \"100%\",\n    color: theme.palette.primary.dark,\n  },\n  messageContainer: {\n    height: \"100%\",\n    display: \"flex\",\n    alignContent: \"flex-end\",\n  },\n  messagesRow: {\n    maxHeight: \"calc(100vh - 184px)\",\n    overflowY: \"auto\",\n  },\n  newMessageRow: {\n    width: \"100%\",\n    padding: theme.spacing(0, 2, 1),\n  },\n  messageBubble: {\n    padding: 10,\n    border: \"1px solid white\",\n    backgroundColor: \"white\",\n    borderRadius: \"0 10px 10px 10px\",\n    boxShadow: \"-3px 4px 4px 0px rgba(0,0,0,0.08)\",\n    marginTop: 8,\n    maxWidth: \"40em\",\n  },\n  messageBubbleRight: {\n    borderRadius: \"10px 0 10px 10px\",\n  },\n  inputRow: {\n    display: \"flex\",\n    alignItems: \"flex-end\",\n  },\n  form: {\n    width: \"100%\",\n  },\n  avatar: {\n    margin: theme.spacing(1, 1.5),\n  },\n  listItem: {\n    display: \"flex\",\n    width: \"100%\",\n  },\n  listItemRight: {\n    flexDirection: \"row-reverse\",\n  },\n}));\n\nconst ChatBox = (props) => {\n  const [currentUserId] = useState(\n    authenticationService.currentUserValue.userId\n  );\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [lastMessage, setLastMessage] = useState(null);\n\n  const getGlobalMessages = useGetGlobalMessages();\n  const sendGlobalMessage = useSendGlobalMessage();\n  const getConversationMessages = useGetConversationMessages();\n  const sendConversationMessage = useSendConversationMessage();\n\n  let chatBottom = useRef(null);\n  const classes = useStyles();\n\n  useEffect(() => {\n    reloadMessages();\n    scrollToBottom();\n  }, [lastMessage, props.scope, props.conversationId]);\n\n  useEffect(() => {\n    const socket = socketIOClient(process.env.REACT_APP_API_URL);\n    socket.on(\"messages\", (data) => setLastMessage(data));\n  }, []);\n\n  const reloadMessages = () => {\n    if (props.scope === \"Global Chat\") {\n      getGlobalMessages().then((res) => {\n        setMessages(res);\n      });\n    } else if (props.scope !== null && props.conversationId !== null) {\n      getConversationMessages(props.user._id).then((res) => setMessages(res));\n    } else {\n      setMessages([]);\n    }\n  };\n\n  const scrollToBottom = () => {\n    chatBottom.current.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(scrollToBottom, [messages]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (props.scope === \"Global Chat\") {\n      sendGlobalMessage(newMessage).then(() => {\n        setNewMessage(\"\");\n      });\n    } else {\n      sendConversationMessage(props.user._id, newMessage).then((res) => {\n        setNewMessage(\"\");\n      });\n    }\n  };\n\n  return (\n    <Grid container className={classes.root}>\n      <Grid item xs={12} className={classes.headerRow}>\n        <Paper className={classes.paper} square elevation={2}>\n          <Typography color=\"inherit\" variant=\"h6\">\n            {props.scope}\n          </Typography>\n        </Paper>\n      </Grid>\n      <Grid item xs={12}>\n        <Grid container className={classes.messageContainer}>\n          <Grid item xs={12} className={classes.messagesRow}>\n            {messages && (\n              <List>\n                {messages.map((m) => (\n                  <ListItem\n                    key={m._id}\n                    className={classnames(classes.listItem, {\n                      [`${classes.listItemRight}`]:\n                        m.fromObj[0]._id === currentUserId,\n                    })}\n                    alignItems=\"flex-start\"\n                  >\n                    <ListItemAvatar className={classes.avatar}>\n                      <Avatar>\n                        {commonUtilites.getInitialsFromName(m.fromObj[0].name)}\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText\n                      classes={{\n                        root: classnames(classes.messageBubble, {\n                          [`${classes.messageBubbleRight}`]:\n                            m.fromObj[0]._id === currentUserId,\n                        }),\n                      }}\n                      primary={m.fromObj[0] && m.fromObj[0].name}\n                      secondary={<React.Fragment>{m.body}</React.Fragment>}\n                    />\n                  </ListItem>\n                ))}\n              </List>\n            )}\n            <div ref={chatBottom} />\n          </Grid>\n          <Grid item xs={12} className={classes.inputRow}>\n            <form onSubmit={handleSubmit} className={classes.form}>\n              <Grid\n                container\n                className={classes.newMessageRow}\n                alignItems=\"flex-end\"\n              >\n                <Grid item xs={11}>\n                  <TextField\n                    id=\"message\"\n                    label=\"Message\"\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={newMessage}\n                    onChange={(e) => setNewMessage(e.target.value)}\n                  />\n                </Grid>\n                <Grid item xs={1}>\n                  <IconButton type=\"submit\">\n                    <SendIcon />\n                  </IconButton>\n                </Grid>\n              </Grid>\n            </form>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ChatBox;\n","/home/miken/projects/tumblerclone/client/src/services/userService.js",[],"/home/miken/projects/tumblerclone/client/src/utilities/common.js",["214"],"export default {\n  getInitialsFromName: (name) => {\n    const letters = String(name)\n      .split(\" \")\n      .map((i) => i.charAt(0));\n    return letters.join(\"\");\n  },\n};\n ","/home/miken/projects/tumblerclone/client/src/utilities/auth-header.js",[],"/home/miken/projects/tumblerclone/client/src/shared/Header.jsx",[],["215","216"],"/home/miken/projects/tumblerclone/client/src/services/chatService.js",[],"/home/miken/projects/tumblerclone/client/src/Home.jsx",[],"/home/miken/projects/tumblerclone/client/src/posts/Posts.jsx",[],"/home/miken/projects/tumblerclone/client/src/users/Users.jsx",[],"/home/miken/projects/tumblerclone/client/src/shared/DataTable.jsx",["217","218","219"],{"ruleId":"220","replacedBy":"221"},{"ruleId":"222","replacedBy":"223"},{"ruleId":"224","severity":1,"message":"225","line":18,"column":9,"nodeType":"226","messageId":"227","endLine":18,"endColumn":12},{"ruleId":"224","severity":1,"message":"228","line":3,"column":10,"nodeType":"226","messageId":"227","endLine":3,"endColumn":19},{"ruleId":"224","severity":1,"message":"229","line":3,"column":21,"nodeType":"226","messageId":"227","endLine":3,"endColumn":27},{"ruleId":"224","severity":1,"message":"230","line":3,"column":29,"nodeType":"226","messageId":"227","endLine":3,"endColumn":32},{"ruleId":"224","severity":1,"message":"231","line":3,"column":34,"nodeType":"226","messageId":"227","endLine":3,"endColumn":45},{"ruleId":"232","severity":1,"message":"233","line":6,"column":1,"nodeType":"234","endLine":71,"endColumn":3},{"ruleId":"235","severity":1,"message":"236","line":6,"column":17,"nodeType":"237","messageId":"238","endLine":6,"endColumn":19},{"ruleId":"239","severity":1,"message":"240","line":9,"column":25,"nodeType":"226","messageId":"241","endLine":9,"endColumn":39},{"ruleId":"242","severity":1,"message":"243","line":45,"column":15,"nodeType":"244","endLine":54,"endColumn":16},{"ruleId":"220","replacedBy":"245"},{"ruleId":"222","replacedBy":"246"},{"ruleId":"232","severity":1,"message":"233","line":27,"column":1,"nodeType":"234","endLine":34,"endColumn":2},{"ruleId":"232","severity":1,"message":"233","line":4,"column":1,"nodeType":"234","endLine":21,"endColumn":3},{"ruleId":"232","severity":1,"message":"233","line":77,"column":1,"nodeType":"234","endLine":101,"endColumn":2},{"ruleId":"232","severity":1,"message":"233","line":82,"column":1,"nodeType":"234","endLine":148,"endColumn":3},{"ruleId":"247","severity":1,"message":"248","line":105,"column":6,"nodeType":"249","endLine":105,"endColumn":12,"suggestions":"250"},{"ruleId":"247","severity":1,"message":"251","line":117,"column":6,"nodeType":"249","endLine":117,"endColumn":8,"suggestions":"252"},{"ruleId":"224","severity":1,"message":"253","line":118,"column":9,"nodeType":"226","messageId":"227","endLine":118,"endColumn":20},{"ruleId":"235","severity":1,"message":"236","line":150,"column":25,"nodeType":"237","messageId":"238","endLine":150,"endColumn":27},{"ruleId":"232","severity":1,"message":"233","line":88,"column":1,"nodeType":"234","endLine":126,"endColumn":3},{"ruleId":"235","severity":1,"message":"236","line":88,"column":17,"nodeType":"237","messageId":"238","endLine":88,"endColumn":19},{"ruleId":"224","severity":1,"message":"254","line":1,"column":27,"nodeType":"226","messageId":"227","endLine":1,"endColumn":36},{"ruleId":"224","severity":1,"message":"255","line":1,"column":38,"nodeType":"226","messageId":"227","endLine":1,"endColumn":46},{"ruleId":"256","severity":1,"message":"257","line":40,"column":15,"nodeType":"258","messageId":"238","endLine":40,"endColumn":17},{"ruleId":"224","severity":1,"message":"259","line":3,"column":8,"nodeType":"226","messageId":"227","endLine":3,"endColumn":12},{"ruleId":"224","severity":1,"message":"260","line":51,"column":7,"nodeType":"226","messageId":"227","endLine":51,"endColumn":23},{"ruleId":"224","severity":1,"message":"261","line":9,"column":20,"nodeType":"226","messageId":"227","endLine":9,"endColumn":26},{"ruleId":"224","severity":1,"message":"262","line":9,"column":28,"nodeType":"226","messageId":"227","endLine":9,"endColumn":39},{"ruleId":"224","severity":1,"message":"263","line":20,"column":9,"nodeType":"226","messageId":"227","endLine":20,"endColumn":21},{"ruleId":"235","severity":1,"message":"236","line":6,"column":15,"nodeType":"237","messageId":"238","endLine":6,"endColumn":17},{"ruleId":"224","severity":1,"message":"264","line":8,"column":9,"nodeType":"226","messageId":"227","endLine":8,"endColumn":17},{"ruleId":"265","severity":1,"message":"266","line":153,"column":9,"nodeType":"244","endLine":153,"endColumn":102},{"ruleId":"265","severity":1,"message":"266","line":159,"column":9,"nodeType":"244","endLine":159,"endColumn":90},{"ruleId":"235","severity":1,"message":"236","line":7,"column":22,"nodeType":"237","messageId":"238","endLine":7,"endColumn":25},{"ruleId":"224","severity":1,"message":"267","line":9,"column":11,"nodeType":"226","messageId":"227","endLine":9,"endColumn":14},{"ruleId":"224","severity":1,"message":"268","line":10,"column":12,"nodeType":"226","messageId":"227","endLine":10,"endColumn":21},{"ruleId":"224","severity":1,"message":"269","line":10,"column":23,"nodeType":"226","messageId":"227","endLine":10,"endColumn":35},{"ruleId":"242","severity":1,"message":"270","line":17,"column":17,"nodeType":"244","endLine":17,"endColumn":50},{"ruleId":"224","severity":1,"message":"271","line":13,"column":18,"nodeType":"226","messageId":"227","endLine":13,"endColumn":27},{"ruleId":"247","severity":1,"message":"272","line":43,"column":6,"nodeType":"249","endLine":43,"endColumn":8,"suggestions":"273"},{"ruleId":"224","severity":1,"message":"254","line":1,"column":27,"nodeType":"226","messageId":"227","endLine":1,"endColumn":36},{"ruleId":"224","severity":1,"message":"274","line":5,"column":8,"nodeType":"226","messageId":"227","endLine":5,"endColumn":12},{"ruleId":"247","severity":1,"message":"275","line":56,"column":6,"nodeType":"249","endLine":56,"endColumn":23,"suggestions":"276"},{"ruleId":"247","severity":1,"message":"277","line":42,"column":6,"nodeType":"249","endLine":42,"endColumn":15,"suggestions":"278"},{"ruleId":"247","severity":1,"message":"279","line":103,"column":6,"nodeType":"249","endLine":103,"endColumn":54,"suggestions":"280"},{"ruleId":"232","severity":1,"message":"281","line":1,"column":1,"nodeType":"234","endLine":8,"endColumn":3},{"ruleId":"220","replacedBy":"282"},{"ruleId":"222","replacedBy":"283"},{"ruleId":"224","severity":1,"message":"284","line":2,"column":8,"nodeType":"226","messageId":"227","endLine":2,"endColumn":17},{"ruleId":"224","severity":1,"message":"285","line":58,"column":5,"nodeType":"226","messageId":"227","endLine":58,"endColumn":14},{"ruleId":"224","severity":1,"message":"286","line":59,"column":5,"nodeType":"226","messageId":"227","endLine":59,"endColumn":9},"no-native-reassign",["287"],"no-negated-in-lhs",["288"],"no-unused-vars","'STX' is assigned a value but never used.","Identifier","unusedVar","'Container' is defined but never used.","'Navbar' is defined but never used.","'Nav' is defined but never used.","'NavDropdown' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-const-assign","'toggleDropDown' is constant.","const","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["287"],["288"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchImages'. Either include it or remove the dependency array.","ArrayExpression",["289"],"React Hook useEffect has a missing dependency: 'loading'. Either include it or remove the dependency array.",["290"],"'listOfItems' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","'Icon' is defined but never used.","'CloseModalButton' is assigned a value but never used.","'Button' is defined but never used.","'ButtonGroup' is defined but never used.","'handleLogout' is assigned a value but never used.","'refModal' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'ref' is assigned a value but never used.","'showModal' is assigned a value but never used.","'setShowModal' is assigned a value but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'setPhotos' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'match.params'. Either include it or remove the dependency array.",["291"],"'List' is defined but never used.","React Hook useEffect has a missing dependency: 'getConversations'. Either include it or remove the dependency array.",["292"],"React Hook useEffect has a missing dependency: 'getUsers'. Either include it or remove the dependency array.",["293"],"React Hook useEffect has a missing dependency: 'reloadMessages'. Either include it or remove the dependency array.",["294"],"Assign object to a variable before exporting as module default",["287"],["288"],"'PropTypes' is defined but never used.","'dataTypes' is assigned a value but never used.","'rows' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"295","fix":"296"},{"desc":"297","fix":"298"},{"desc":"299","fix":"300"},{"desc":"301","fix":"302"},{"desc":"303","fix":"304"},{"desc":"305","fix":"306"},"Update the dependencies array to be: [fetchImages, page]",{"range":"307","text":"308"},"Update the dependencies array to be: [loading]",{"range":"309","text":"310"},"Update the dependencies array to be: [match.params]",{"range":"311","text":"312"},"Update the dependencies array to be: [getConversations, newConversation]",{"range":"313","text":"314"},"Update the dependencies array to be: [getUsers, newUser]",{"range":"315","text":"316"},"Update the dependencies array to be: [lastMessage, props.scope, props.conversationId, reloadMessages]",{"range":"317","text":"318"},[2223,2229],"[fetchImages, page]",[2559,2561],"[loading]",[1207,1209],"[match.params]",[1723,1740],"[getConversations, newConversation]",[1176,1185],"[getUsers, newUser]",[2794,2842],"[lastMessage, props.scope, props.conversationId, reloadMessages]"]