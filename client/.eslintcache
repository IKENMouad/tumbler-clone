[{"/home/miken/projects/tumblerclone/client/src/index.jsx":"1","/home/miken/projects/tumblerclone/client/src/Root.jsx":"2","/home/miken/projects/tumblerclone/client/src/App.jsx":"3","/home/miken/projects/tumblerclone/client/src/Nav.jsx":"4","/home/miken/projects/tumblerclone/client/src/Explore.jsx":"5","/home/miken/projects/tumblerclone/client/src/Personal.jsx":"6","/home/miken/projects/tumblerclone/client/src/Presentation.jsx":"7","/home/miken/projects/tumblerclone/client/src/Icon.jsx":"8","/home/miken/projects/tumblerclone/client/src/Search.jsx":"9","/home/miken/projects/tumblerclone/client/src/Timeline.jsx":"10","/home/miken/projects/tumblerclone/client/src/SidePanel.jsx":"11","/home/miken/projects/tumblerclone/client/src/ContentItem.jsx":"12","/home/miken/projects/tumblerclone/client/src/ContentPanel.jsx":"13","/home/miken/projects/tumblerclone/client/src/ModalAction.jsx":"14","/home/miken/projects/tumblerclone/client/src/ActionItem.jsx":"15","/home/miken/projects/tumblerclone/client/src/MyNav.jsx":"16","/home/miken/projects/tumblerclone/client/src/Auth.jsx":"17","/home/miken/projects/tumblerclone/client/src/SearchModal.jsx":"18","/home/miken/projects/tumblerclone/client/src/CreateModal.jsx":"19","/home/miken/projects/tumblerclone/client/src/shared/UseOnClickOutside.jsx":"20"},{"size":172,"mtime":1629237227955,"results":"21","hashOfConfig":"22"},{"size":878,"mtime":1629413805457,"results":"23","hashOfConfig":"22"},{"size":2058,"mtime":1629237227955,"results":"24","hashOfConfig":"22"},{"size":2976,"mtime":1629237227955,"results":"25","hashOfConfig":"22"},{"size":4312,"mtime":1629237227955,"results":"26","hashOfConfig":"22"},{"size":430,"mtime":1629237227955,"results":"27","hashOfConfig":"22"},{"size":593,"mtime":1629237227955,"results":"28","hashOfConfig":"22"},{"size":402,"mtime":1629237227955,"results":"29","hashOfConfig":"22"},{"size":2622,"mtime":1629233335434,"results":"30","hashOfConfig":"22"},{"size":4185,"mtime":1629237227955,"results":"31","hashOfConfig":"22"},{"size":2838,"mtime":1629237227955,"results":"32","hashOfConfig":"22"},{"size":2177,"mtime":1629237227955,"results":"33","hashOfConfig":"22"},{"size":3484,"mtime":1629237227955,"results":"34","hashOfConfig":"22"},{"size":4438,"mtime":1629237227955,"results":"35","hashOfConfig":"22"},{"size":413,"mtime":1629237227955,"results":"36","hashOfConfig":"22"},{"size":1032,"mtime":1629237220402,"results":"37","hashOfConfig":"22"},{"size":2768,"mtime":1629413533862,"results":"38","hashOfConfig":"22"},{"size":2025,"mtime":1629237220402,"results":"39","hashOfConfig":"22"},{"size":3816,"mtime":1629237220402,"results":"40","hashOfConfig":"22"},{"size":701,"mtime":1629237220442,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1tvddn0",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":2,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/miken/projects/tumblerclone/client/src/index.jsx",[],["96","97"],"/home/miken/projects/tumblerclone/client/src/Root.jsx",["98"],"import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport App from \"./App.jsx\"; \nimport Explore from \"./Explore.jsx\";\nimport Personal from \"./Personal.jsx\";\nimport './styles/styles.scss' \nimport { Fragment } from \"react\";\nimport Auth from \"./Auth.jsx\";\nimport MyNav from \"./MyNav.jsx\";\n\n\nconst Root = () => {\n  const STX = styled.div`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    box-sizing: border-box;\n  `;\n\n\n  \n  return (\n    <Router>\n      <Fragment> \n        <MyNav />\n        <Route exact path=\"/\" component={App} />\n        <Route exact path=\"/auth\" component={Auth} />\n        <Route path=\"/explore\" component={Explore} />\n        <Route path=\"/personal\" component={Personal} />\n      </Fragment>\n    </Router>\n  );\n};\n\n\nexport default Root;\n","/home/miken/projects/tumblerclone/client/src/App.jsx",[],"/home/miken/projects/tumblerclone/client/src/Nav.jsx",["99","100","101","102","103","104","105","106"],"import React, { useState } from \"react\";\nimport { Fragment } from \"react\";\nimport { Container, Navbar, Nav, NavDropdown } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nexport default ({}) => {\n  const [toggleDropDown, setToggleDropDown] = useState(false);\n   const showToggleDropDown = () => {\n     setToggleDropDown((toggleDropDown = !toggleDropDown));\n   };\n\n  return (\n    <Fragment>\n      <nav className=\"navbar navbar-expand-md mx-5\">\n        <Link className=\"navbar-brand\" to=\"#\">\n          Navbar\n        </Link>\n        <button\n          className=\"navbar-toggler d-lg-none\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#collapsibleNavId\"\n          aria-controls=\"collapsibleNavId\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"collapsibleNavId\">\n          <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n            <li className=\"nav-item active\">\n              <Link className=\"nav-link\" to=\"#\">\n                Home <span className=\"sr-only\">(current)</span>\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to=\"#\">\n                Link\n              </Link>\n            </li>\n          </ul>\n\n          <ul className=\"navbar-nav ml-auto mt-2 mt-lg-0\">\n            <li className=\"nav-item dropdown\">\n              <a\n                onClick={() => showToggleDropDown}\n                className={`nav-link dropdown-toggle ${\n                  toggleDropDown ? \"show\" : null\n                } `}\n                id=\"dropdownId\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n              >\n                Dropdown\n              </a>\n              <div className=\"dropdown-menu\" aria-labelledby=\"dropdownId\">\n                <Link className=\"dropdown-item\" to=\"#\">\n                  Action 1\n                </Link>\n                <Link className=\"dropdown-item\" to=\"#\">\n                  Action 2\n                </Link>\n              </div>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </Fragment>\n  );\n};\n\n// <Nav>\n//   <NavComponent>\n//     <NavItem>\n//       <StyledLink to=\"/\">A</StyledLink>\n//     </NavItem>\n//     <NavForm>#001935\n//       <Search />\n//     </NavForm>\n//   </NavComponent>\n//   <NavComponent>\n//     <NavItem>\n//       <StyledLink to=\"/explore\">\n//         <BsHouse></BsHouse>\n//       </StyledLink>\n//     </NavItem>\n//     <NavItem>\n//       <StyledLink to=\"/explore\">EX</StyledLink>\n//     </NavItem>\n//     <NavItem>\n//       <StyledLink to=\"/explore\">EX</StyledLink>\n//     </NavItem>\n//     <NavUserItem>\n//       <Icon>R</Icon>\n//       <UserDetails>\n//         Mouad <br />\n//       </UserDetails>\n//     </NavUserItem>\n//   </NavComponent>\n// </Nav>\n","/home/miken/projects/tumblerclone/client/src/Explore.jsx",[],"/home/miken/projects/tumblerclone/client/src/Personal.jsx",[],"/home/miken/projects/tumblerclone/client/src/Presentation.jsx",["107"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport Timeline from \"./Timeline.jsx\";\nimport SidePanel from \"./SidePanel.jsx\";\n\nconst Presentation = styled.div`\n  display: flex;\n  background: #001935; \n  margin: 0 auto;\n\n  @media (min-width: 450px) {\n    width: 100%;\n    min-width: 450px;\n  }\n\n  @media (min-width: 700px) {\n    width: 100%;\n    min-width: 700px;\n  }\n\n  @media (min-width: 1200px) {\n    width: 1024px;\n  }\n`;\n\n\nexport default ({content}) => {\n  return (\n    <Presentation>\n      <Timeline content={content} />\n      <SidePanel />\n    </Presentation>\n  );\n}","/home/miken/projects/tumblerclone/client/src/Icon.jsx",["108"],"import React from \"react\";\nimport styled from \"styled-components\";\n\nexport default ({\n  background = \"#343434\",\n  color = \"white\",\n  size = \"2vw\",\n  children,\n}) => {\n  const Icon = styled.div`\n    height: ${size};\n    width: ${size};\n    background: ${background};\n    color: ${color};\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  `;\n\n  return <Icon>{children}</Icon>;\n};","/home/miken/projects/tumblerclone/client/src/Search.jsx",["109"],"import React from \"react\";\nimport styled from \"styled-components\";\n\n\nconst Search = styled.div`\n    display: flex;    \n    position: relative;    \n    z-index:10;\n`;\n\nconst SearchDropdownContainer = styled.div`\n    display: none;        \n    position: absolute;\n    top: 5.5vh;\n    background: white;\n    width: 50vh;\n    height: 25vh;    \n    border: 1px solid rgba(0,0,0,0.1);    \n\n    &:hover {\n        display: block;\n    }  \n`;\n\nconst SearchItems = styled.div`\n    height: 5vh;\n    display: flex;\n    flex-direction: column;   \n    justify-content: center;        \n`;\n\nconst SearchItemContainer = styled.div`\n    background: white;\n    display: flex;        \n`;\nconst SearchAvatarContainer = styled.div`        \n    height: 4vh;\n    width: 4vh;\n    background: #343434;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\nconst SearchAvatarContent = styled.div`    \n    color: white;    \n`;\n\nconst SearchTitleContainer = styled.div`\n    display: flex;\n    align-items: center;\n    margin-left: 1vh;    \n`;\nconst SearchTitleContent = styled.a`  \n    text-decoration: none;\n    background: white;\n`;\n\nconst SearchInput = styled.input`     \n    width: 50vh;\n    box-sizing: border-box;\n    font-size: 20px;\n    padding-left: 2vh;\n    border: 2px solid transparent;    \n    \n    &:focus ~ ${SearchDropdownContainer} {\n        display: block;\n    }\n    \n    &:focus{\n        border-bottom: 2px solid black;\n        outline: none;\n    }  \n`;\n\nconst dummy = [\"Namtab\", \"Batman\", \"Robin\", \"Nightwing\", \"Signal\"];\n\nexport default () => {\n    return (\n        <Search>\n            <SearchInput type = \"text\" placeholder = \"Search\"/>                                            \n            <SearchDropdownContainer>\n                {\n                dummy.map((content, index) => {\n                    return (\n                        <SearchItems>\n                            <SearchItemContainer>\n                                <SearchAvatarContainer>\n                                    <SearchAvatarContent>{index}</SearchAvatarContent>                                    \n                                </SearchAvatarContainer>\n                                <SearchTitleContainer>\n                                    <SearchTitleContent href = \"http://www.engadget.com\">{content}</SearchTitleContent>\n                                </SearchTitleContainer>\n                            </SearchItemContainer>\n                        </SearchItems>\n                    );\n                })\n                }                       \n            </SearchDropdownContainer>\n        </Search>\n    );\n}","/home/miken/projects/tumblerclone/client/src/Timeline.jsx",["110","111","112","113","114"],"import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport ContentItem from \"./ContentItem.jsx\";\nimport ContentPanel from \"./ContentPanel.jsx\";\n\n\nconst Timeline = styled.div`    \n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    background: #001935;     \n    \n  @media(min-width: 450px){\n        width: 100%;\n        min-width: 450px;\n    }\n    \n    @media(min-width: 700px){\n        width: 100%;\n        min-width: 700px;\n    }\n\n    @media(min-width: 1200px){\n        width: 70%;\n    }   \n`;\nexport const TimelineItem = styled.div`    \n    width: 90%;\n    margin: 0 auto;\n    display: flex;    \n`;\n\nconst AvatarHover = styled.div`\n  display: none;\n  position: absolute;\n  box-sizing: border-box;\n  width: 20vh;\n  height: 30vh;\n  background: rgba(0, 0, 0, 0.1);\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  bottom: -30vh;\n  &:hover {\n    display: block;\n  }\n`;\n\nconst AvatarSection = styled.div`\n  position: relative;\n  box-sizing: border-box;\n  background-color: #0fcafa;\n  width: 10vh;\n  height: 8.4vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-right: 2vh;\n  margin-top: 3vh;\n  border-radius: 4px;\n  cursor: pointer;\n  &:hover ${AvatarHover} {\n    display: none;\n  }\n  @media (min-width: 450px) {\n    height: 7.7vh;\n  }\n`;\n\nconst Avatar = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  text-transform: uppercase;\n`;\n\nconst MainUrl = `https://api.unsplash.com/photos/`;\n\nexport default ({ content }) => {\n  const [loading, setLoading] = useState(true);\n  const [photos, setPhoto] = useState([]);\n  const [page, setPage] = useState(1);\n\n  const fetchImages =  () => {\n    setLoading(true);\n    let url = `${MainUrl}?client_id=_L58fCsi0-lwrlFt-UJkbskBT7EWP63zSs2RWdvusn8&page=${page}`;\n    axios\n      .get(url)\n      .then((response) => {\n        let myPhotos = [...photos, ...response.data];\n        setPhoto(myPhotos);\n        setLoading(false);\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(\"err\", err);\n      });\n  };\n  \n  useEffect(() => {\n    fetchImages();\n  }, [page]);\n  \n  useEffect(() => {\n    const event = window.addEventListener(\"scroll\", () => {\n      if (\n        loading &&\n        window.innerHeight + window.scrollY >= document.body.scrollHeight - 2\n      ) {\n        setPage((oldPage) => oldPage + 1);\n      }\n    });\n    return () => window.removeEventListener(\"scroll\", event);\n  }, []);\n  const listOfItems = content.map((item) => {\n    return (\n      <TimelineItem key={item.id}>\n        <AvatarSection>\n          <Avatar>{item.author[0]}</Avatar>\n          <AvatarHover />\n        </AvatarSection>\n        <ContentItem {...item} />\n      </TimelineItem>\n    );\n  });\n\n  const listOfPhotos = photos.map((item) => {\n    return (\n      <TimelineItem key={item.id}>\n        {!loading && (\n          <AvatarSection>\n            <Avatar>{item.user.name[0]}</Avatar>\n            <AvatarHover />\n          </AvatarSection>\n        )}\n        {!loading ? (\n          <ContentItem {...item} />\n        ) : (\n          <LoadingSection></LoadingSection>\n        )}\n      </TimelineItem>\n    );\n  });\n  return <Timeline>{listOfPhotos}</Timeline>;\n};\n\nconst LoadingSection = ({}) => {\n  const AdSection = ItemSection.extend`\n    box-shadow: 0px 0px 0px white;\n  `;\n\n  return (\n    <AdSection>\n      <ContentPanel type=\"top\" />\n      <Content>\n        <img\n          src=\"http://localhost:3000/assets/loading-gif.gif\"\n          alt=\"loading-gif\"\n          style={{ width: \"100%\", height: \"auto\" }}\n        />\n      </Content>\n      <ContentPanel type=\"bottom\" />\n    </AdSection>\n  );\n};\n\nconst ItemSection = styled.div`\n  margin-bottom: 2vh;\n  margin-top: 3vh;\n  background: white;\n  width: 100%;\n  border-radius: 5px;\n  font-size: 14px;\n  font-family: Helvetica;\n  font-weight: bold;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  box-shadow: 10px 10px 8px rgba(0, 0, 0, 0.1);\n`;\n\nconst Content = styled.div`\n  background: lavender;\n  height: auto;\n  max-width: 100%;\n  display: flex;\n  align-items: center;\n  position: relative;\n  overflow: hidden;\n  box-sizing: border-box;\n`;","/home/miken/projects/tumblerclone/client/src/SidePanel.jsx",["115","116"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport uuid from \"uuid\";\nimport data from \"./data.json\";\nimport Icon from \"./Icon.jsx\";\nimport { AdSection } from \"./ContentItem.jsx\";\n\n\n\nconst FixedContainer = styled.div`\n  width: 30%;\n  margin-top: 2rem;\n  flex-direction: column;\n  font-family: Helvetica;\n  display: block;\n  // position: fixed;\n  @media (min-width: 450px) {\n    display: none;\n  }\n  @media (min-width: 1200px) {\n    display: flex;\n  }\n`;\n\nconst Section = styled.div`\n  width: 100%;\n`;\n\nconst SectionContent = styled.div`\n  margin: 0 auto;\n  margin-bottom: 2vw;\n`;\n\nconst SectionTitle = styled.div`\n  border-bottom: 3px solid #00B8ff;\n  font-weight: bold;\n  padding-bottom: 1vh;\n  margin-bottom: 1vh;\n  color: white;\n  font-family: \"Favorit\", \"Helvetica Neue\", \"HelveticaNeue\", Helvetica, Arial,\n    sans-serif;\n`;\n\nconst ItemSubscribe = styled.div`\n  color: #00B8ff;\n  text-align: center;\n  margin: 5px;\n`;\n\nconst Item = styled.div`\n  display: flex;\n  padding: 0.5vw 0vw;\n  justify-content: space-between;\n\n  &:hover {\n    background: rgba(0, 0, 0, 0.1);\n  }\n\n  &:hover ${ItemSubscribe} {\n    text-decoration: underline;\n  }\n`;\nconst ItemDetails = styled.div`\n  display: flex;\n`;\n\nconst ItemTextContainer = styled.div`\n  padding-left: 1vh;\n`;\nconst TextTitle = styled.div`\n  font-weight: 600;\n  color: white;\n`;\nconst TextSubtitle = styled.div`\n  font-size: 11px;\n  color: white;\n`;\nconst ExpoloreMore = styled.div`\n  cursor: pointer;\n  color: #00B8ff;\n  font-size: 1rem;\n  font-weight: 400;\n  line-height: 1.5;\n  text-decoration: none;\n  margin-top: 15px;\n  display: inline-block;\n`;\nexport default ({}) => {\n  return (\n    // <RootContainer>\n      <FixedContainer>\n        <Section key={uuid.v4()}>\n          <SectionTitle> Check out these blogs </SectionTitle>\n          <SectionContent>\n            {data.data.slice(0, 5).map((item) => {\n              return (\n                <Item key={uuid.v4()}>\n                  <ItemDetails>\n                    <Icon>{item.name[0]}</Icon>\n                    <ItemTextContainer>\n                      <TextTitle>{item.name}</TextTitle>\n                      <TextSubtitle>{item.occupation}</TextSubtitle>\n                    </ItemTextContainer>\n                  </ItemDetails>\n                  <ItemSubscribe>Follow</ItemSubscribe>\n                </Item>\n              );\n            })}\n\n            <ExpoloreMore>Expolore more</ExpoloreMore>\n          </SectionContent>\n        </Section>\n        <Section key={uuid.v4()}>\n          <SectionTitle>Radar</SectionTitle>\n          <SectionContent>\n            <AdSection\n              author=\"Mouad\"\n              height=\"40\"\n              title=\"Ad TITLE that does stuff and stuff.\"\n            />\n          </SectionContent>\n        </Section>\n      </FixedContainer>\n    // </RootContainer>\n  );\n};\n","/home/miken/projects/tumblerclone/client/src/ContentItem.jsx",["117","118","119"],"import React, { Fragment, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport ContentPanel from \"./ContentPanel.jsx\";\n\nconst ItemSection = styled.div`\n  margin-bottom: 2vh;\n  margin-top: 3vh;\n  background: white;\n  width: 100%;\n  border-radius: 5px;\n  font-size: 14px;\n  font-family: Helvetica;\n  font-weight: bold;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  box-shadow: 10px 10px 8px rgba(0, 0, 0, 0.1);\n`;\n\nconst Content = styled.div`\n  background: lavender;\n  height: auto;\n  max-width: 100%;\n  display: flex;\n  align-items: center;\n  position: relative;\n  overflow: hidden;\n  box-sizing: border-box;\n`;\n\nconst AdSection = ({ id, user, likes, urls, alt_description,height = 50 }) => {\n  const AdSection = ItemSection.extend`\n    box-shadow: 0px 0px 0px white;\n  `;\n  const ContentOverride = Content.extend`\n    height: ${height}vh;\n  `;\n\n  return (\n    <AdSection>\n      <ContentPanel id={id} type=\"top\" author=\"mouad\" />\n      {height != 50 ? (\n        <ContentOverride> {alt_description} </ContentOverride>\n      ) : (\n        <Content>{alt_description}</Content>\n      )}\n      <ContentPanel id={id} type=\"bottom\" score=\"1234\" />\n    </AdSection>\n  );\n};\n\nexport { AdSection };\n\n\n// const ContentItem = ({ id, author, title, score, image }) => {\n//   return (\n//     <ItemSection>\n//       <ContentPanel id={id} type=\"top\" author={author} />\n//       <Content>\n//         <img\n//           src={image[0].url}\n//           alt={title}\n//           style={{ width: \"69.4vh\", height: \"50vh\" }}\n//         />\n//       </Content>\n//       <ContentPanel id={id} type=\"bottom\" score={score} />\n//     </ItemSection>\n//   );\n// };\n\nconst ContentItem = ({ id, user, likes, urls, alt_description }) => {\n  return (\n    <ItemSection>\n      <Fragment>\n        <ContentPanel id={id} type=\"top\" author={user.name} />\n        <Content>\n          <img\n            src={urls.regular}\n            alt={alt_description}\n            style={{ width: \"100%\", height: \"auto\" }}\n          />\n          )\n        </Content>\n        <ContentPanel id={id} type=\"bottom\" score={likes} />\n      </Fragment>\n      )\n    </ItemSection>\n  );\n};\nexport default ContentItem;\n","/home/miken/projects/tumblerclone/client/src/ContentPanel.jsx",["120","121"],"import React, { Fragment, useState }  from \"react\";\nimport styled from \"styled-components\";\nimport Icon from \"./Icon.jsx\";\nimport { BsThreeDots } from \"react-icons/bs\";\nimport { FaRegCommentDots } from \"react-icons/fa\";\nimport { FaRegShareSquare } from \"react-icons/fa\";\nimport { FaRegHeart } from \"react-icons/fa\";\nimport ModalAction from \"./ModalAction.jsx\";\n\nconst Header = styled.div`\n  margin: 2vh;\n  display: flex;\n  justify-content: space-between;\n  background-color: white;\n  `;\n  \nconst HeaderDetails = styled.div`\n    display: flex;\n    cursor: pointer;\n    font-size: 13px;\n    background-color: white;\n  `;\n  \nconst HeaderActionsButton = styled.div`\n  background-color: white;\n  display: flex;\n`;\n\nconst HeaderActionsTop = styled.div`\n  display: flex;\n  background-color: white;\n`;\n\nconst HeaderActionsItem = styled.div`\n  color: #00B8ff;\n  height: 1vw;\n  background-color: white;\n  font-size: 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0 0.5vw;\n  margin-left: 1vw;\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst BottomActionItem = styled.div`\n  margin: 0;\n  color: #000000a6;\n  background-color: white;\n  font-family: \"Favorit\", \"Helvetica Neue\", \"HelveticaNeue\", Helvetica, Arial,\n    sans-serif;\n  cursor: pointer;\n`;\n\nconst Actions = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin: 2vh;\n  background-color: white;\n`;\n\n\nexport default ({ id, type, author, score }) => {\n  const [showModal, setShowModal] = useState(false);\n\n  const openModal = () => {\n    setShowModal((prev) => !prev);\n  };\n\n  if (type === \"top\") {\n    return (\n      <Header>\n        {id && (\n          <Fragment>\n            <HeaderDetails>\n              {author}\n              <HeaderActionsItem>Follow</HeaderActionsItem>\n            </HeaderDetails>\n            <HeaderActionsTop>\n              <BsThreeDots\n                style={{\n                  cursor: \"pointer\",\n                  fontSize: \"16px\",\n                  position: \"relative\",\n                  backgroundColor:'white'\n                }}\n                onClick={() => openModal(id)}\n              />\n              <ModalAction\n                gif\n                id={id}\n                showModal={showModal}\n                setShowModal={setShowModal}\n              />\n            </HeaderActionsTop>\n          </Fragment>\n        )}\n      </Header>\n    );\n  } else {\n    return (\n      <Actions className=\"actions\" > \n        {id && (\n          <Fragment>\n            <HeaderDetails>\n              <BottomActionItem>{score} notes</BottomActionItem>\n            </HeaderDetails>\n            <HeaderActionsButton>\n              <FaRegCommentDots\n                style={{\n                  margin: \"0 10px\",\n                  fontSize: \"24px\",\n                  cursor: \"pointer\",\n                  backgroundColor: \"white\",\n                }}\n              />\n              <FaRegShareSquare\n                style={{\n                  margin: \"0 10px\",\n                  fontSize: \"24px\",\n                  cursor: \"pointer\",\n                  backgroundColor: \"white\",\n                }}\n              />\n              <FaRegHeart\n                style={{\n                  margin: \"0 0 0 10px\",\n                  fontSize: \"24px\",\n                  cursor: \"pointer\",\n                  backgroundColor: \"white\",\n                }}\n              />\n            </HeaderActionsButton>\n          </Fragment>\n        )}\n      </Actions>\n    );\n  }\n};\n","/home/miken/projects/tumblerclone/client/src/ModalAction.jsx",["122"],"import React, { useRef, useEffect, useCallback } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport styled from 'styled-components';\nimport { MdClose } from 'react-icons/md';\nimport ActionItem from './ActionItem.jsx';\n\nconst Background = styled.div`\n  position: absolute;\n  background: #001935;\n  display: flex;\n  justify-content: center;\n  border-radius: 10px;\n  align-items: center;\n  @media (min-width: 450px) {\n    left: 73.2%;\n    top: 13%;\n  }\n  @media (min-width: 1200px) {\n    left: 61.1%;\n    top: 12.4%;\n  }\n`;\n   \nconst ModalWrapper = styled.div`\n  box-shadow: 0 5px 16px rgba(0, 0, 0, 0.2);\n  background: #fff;\n  color: #000;\n  z-index: 10;\n  border-radius: 10px;\n  `;\n  \n  const ModalContent = styled.div`\n  width: 13rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  line-height: 1.8;\n  color: #141414;\n  p {\n    margin-bottom: 1rem;\n  }\n  button {\n    padding: 10px 24px;\n    background: #141414;\n    color: #fff;\n    border: none;\n  }\n`;\n\nconst CloseModalButton = styled(MdClose)`\n  cursor: pointer;\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  width: 32px;\n  height: 32px;\n  padding: 0;\n  z-index: 10;\n`;\n\n const ModalAction = ({ id, showModal, setShowModal }) => {\n   const modalRef = useRef();\n\n   const animation = useSpring({\n     config: {\n       duration: 300,\n     },\n     opacity: showModal ? 1 : 0,\n     transform: showModal ? `translateY(0%)` : `translateY(-100%)`,\n   });\n\n   const closeModal = (e) => {\n     setShowModal(false);\n   };\n\n   const keyPress = useCallback(\n     (e) => {\n       if (\n         showModal &&\n         (e.key === \"Escape\" || e.key === \"ArrowDown\" || e.key === \"ArrowUp\")\n       ) {\n         setShowModal(false);\n       }\n     },\n     [setShowModal, showModal]\n   );\n\n   const getActionHandler = (event, { action }) => {\n      switch (action) {\n        case \"created-at\":\n          break;\n\n        case \"copy-link\":\n          navigator.clipboard\n            .writeText(\"Copy this text to clipboard\")\n          break;\n\n        case \"hide-post\":\n          break;\n        case \"report\":\n          break;\n        case \"block\":\n          break;\n        case \"close\":\n          closeModal(event);\n          break;\n        default:\n          closeModal(event);\n          break;\n      }\n   };\n\n   useEffect(() => {\n     document.addEventListener(\"keydown\", keyPress);\n     return () => document.removeEventListener(\"keydown\", keyPress);\n   }, [keyPress]);\n\n   return (\n     <div>\n       {showModal ? (\n         <Background onClick={closeModal} ref={modalRef}>\n           <animated.div style={animation}>\n             <ModalWrapper showModal={showModal}>\n               <ModalContent>\n                 <ActionItem\n                   getActionHandler={(event, data) => getActionHandler(event, data)}\n                   action=\"created-at\"\n                   label=\"Posted - Friday 5:33PM\"\n                   color=\"black\"\n                   hasButtom={true}\n                 />\n                 <div style={{ border: \"1px ridge\", width: \"100%\" }}></div>\n                 <ActionItem\n                   getActionHandler={(event, data) => getActionHandler(event, data)}\n                   action=\"copy-link\"\n                   label=\"Copy link\"\n                   color=\"black\"\n                 />\n                 <ActionItem\n                   getActionHandler={(event, data) => getActionHandler(event, data)}\n                   action=\"hide-post\"\n                   label=\"hide this post\"\n                   color=\"black\"\n                 />\n                 <ActionItem\n                   getActionHandler={(event, data) => getActionHandler(event, data)}\n                   action=\"report\"\n                   label=\"Report\"\n                   color=\"red\"\n                 />\n                 <ActionItem\n                   getActionHandler={(event, data) => getActionHandler(event, data)}\n                   action=\"block\"\n                   label=\"Block\"\n                   color=\"red\"\n                 />\n                 <ActionItem\n                   getActionHandler={(event, data) => getActionHandler(event, data)}\n                   action=\"close\"\n                   label=\"Close\"\n                   color=\"red\"\n                 />\n               </ModalContent>\n             </ModalWrapper>\n           </animated.div>\n         </Background>\n       ) : null}\n     </div>\n   );\n };\n\nexport default ModalAction;","/home/miken/projects/tumblerclone/client/src/ActionItem.jsx",[],"/home/miken/projects/tumblerclone/client/src/MyNav.jsx",[],"/home/miken/projects/tumblerclone/client/src/Auth.jsx",["123","124","125","126","127"],"import React, { useEffect } from \"react\";\nimport \"./styles/auth.scss\";\n\nconst Auth = ({}) => {\n  useEffect(() => {\n    document.querySelector(\".img__btn\").addEventListener(\"click\", function () {\n      document.querySelector(\".cont\").classList.toggle(\"s--signup\");\n    });\n  }, []);\n\n  return (\n    <div>\n      <div className=\"cont\">\n        <div className=\"form sign-in\">\n          <h2>Welcome back,</h2>\n          <label>\n            <span>Email</span>\n            <input type=\"email\" />\n          </label>\n          <label>\n            <span>Password</span>\n            <input type=\"password\" />\n          </label>\n          <p className=\"forgot-pass\">Forgot password?</p>\n          <button type=\"button\" className=\"submit\">\n            Sign In\n          </button>\n          <button type=\"button\" className=\"fb-btn\">\n            Connect with <span>facebook</span>\n          </button>\n        </div>\n        <div className=\"sub-cont\">\n          <div className=\"img\">\n            <div className=\"img__text m--up\">\n              <h2>New here?</h2>\n              <p>Sign up and discover great amount of new opportunities!</p>\n            </div>\n            <div className=\"img__text m--in\">\n              <h2>One of us?</h2>\n              <p>\n                If you already has an account, just sign in. We've missed you!\n              </p>\n            </div>\n            <div className=\"img__btn\">\n              <span className=\"m--up\">Sign Up</span>\n              <span className=\"m--in\">Sign In</span>\n            </div>\n          </div>\n          <div className=\"form sign-up\">\n            <h2>Time to feel like home,</h2>\n            <label>\n              <span>Name</span>\n              <input type=\"text\" />\n            </label>\n            <label>\n              <span>Email</span>\n              <input type=\"email\" />\n            </label>\n            <label>\n              <span>Password</span>\n              <input type=\"password\" />\n            </label>\n            <button type=\"button\" className=\"submit\">\n              Sign Up\n            </button>\n            <button type=\"button\" className=\"fb-btn\">\n              Join with <span>facebook</span>\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <a\n        href=\"https://dribbble.com/shots/3306190-Login-Registration-form\"\n        target=\"_blank\"\n        className=\"icon-link\"\n      >\n        <img src=\"http://icons.iconarchive.com/icons/uiconstock/socialmedia/256/Dribbble-icon.png\" />\n      </a>\n      <a\n        href=\"https://twitter.com/NikolayTalanov\"\n        target=\"_blank\"\n        className=\"icon-link icon-link--twitter\"\n      >\n        <img src=\"https://cdn1.iconfinder.com/data/icons/logotypes/32/twitter-128.png\" />\n      </a>\n    </div>\n  );\n};\n\nexport default Auth;\n","/home/miken/projects/tumblerclone/client/src/SearchModal.jsx",["128"],"import ReactCircleModal from 'react-circle-modal'\nimport Search from \"./img/search-icon.png\";\nimport styled from 'styled-components'\nimport { AiOutlineClose } from \"react-icons/ai\";\nimport { useState } from 'react';\n\nconst SearchModal = ({ }) => {\n    const [query, setQuery] = useState('')\n\n    const searchHandel = (e) => {\n        if (e.key === 'Enter') {\n            console.log('enter key::', query)\n        }\n    }\n\n    return (\n        <ReactCircleModal\n            backgroundColor=\"#53555fe6\"\n            toogleComponent={onClick => (\n                <img onClick={onClick} src={Search} alt=\"search-icon.png\" />\n            )}\n            // Optional fields and their default values\n            offsetX={0}\n            offsetY={0}\n        >\n            {(onClick) => (\n                <div className=\"d-flex justify-content-between align-items-center\" style={{ padding: '1em' }}>\n                    <div></div>\n                    <div   >\n                        <SearchInput>\n                            <Input placeholder=\"Search...\"\n                                value={query}\n                                onChange={(e) => setQuery(e.target.value)}\n                                onKeyDown={e => searchHandel(e)}\n                            />\n                        </SearchInput>\n                    </div>\n\n                    <div className=\"close-modal\" onClick={onClick} >\n                        <AiOutlineClose style={{ fontSize: '40px', color: 'white', cursor: 'pointer' }} />\n                    </div>\n                </div>\n            )}\n        </ReactCircleModal>\n\n    )\n}\n\nexport default SearchModal\n\nconst SearchInput = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background: #2d2e33;\n  border-radius: 2.5rem;\n  margin-top: 17px;\n  height: 66px;\n  width: 40rem;\n`;\nconst Input = styled.input`\n  outline: none;\n  border: none; \n  color: #fff;\n  min-width: 90%;\n  background: none;\n  font-size: 24px;\n  &::placeholder {\n    color: #828387;\n  }\n`;","/home/miken/projects/tumblerclone/client/src/CreateModal.jsx",["129","130"],"import ReactCircleModal from 'react-circle-modal'\nimport { BsPencil } from \"react-icons/bs\";\nimport styled from 'styled-components'\nimport { AiOutlineTwitter, AiFillFacebook, AiOutlineGithub, AiFillYoutube, AiFillInstagram, AiOutlineClose } from \"react-icons/ai\";\nimport { useRef, useState } from 'react';\nimport useOnClickOutside from './shared/UseOnClickOutside';\n\n\nconst CreateModal = () => {\n    const ref = useRef();\n    const [showModal, setShowModal] = useState(false);\n    useOnClickOutside(ref, () => setShowModal(false));\n\n\n    return (\n        <ReactCircleModal\n            backgroundColor=\"#53555fe6\"\n            toogleComponent={onClick => (\n                <a onClick={onClick} href=\"#\"   >\n                    <BsPencil style={{ color: '#00b8ff', fontSize: '20px', cursor: 'pointer' }} />\n                </a>\n            )}\n            offsetX={0}\n            offsetY={0}\n        >\n            {(onClick) => (\n                <CenterScreen>\n                    <div className=\"wrapper\">\n\n                        <div className=\"icon\">\n                            <div className=\"type facebook\">\n                                <div className=\"tooltip\">Facebook</div>\n                                <span> <AiFillFacebook style={{ fontSize: '50px' }} /> </span>\n                            </div>\n                            <span className=\"icon-label\" >Facebook</span>\n                        </div>\n                        <div className=\"icon \">\n                            <div className=\"type twitter\" >\n                                <div className=\"tooltip\">Twitter</div>\n                                <span> <AiOutlineTwitter style={{ fontSize: '50px' }} /> </span>\n                            </div>\n                            <span className=\"icon-label\" > Twitter</span>\n                        </div>\n                        <div className=\"icon\">\n                            <div className=\"type instagram\" >\n                                <div className=\"tooltip\">Instagram</div>\n                                <span> <AiFillInstagram style={{ fontSize: '50px' }} /> </span>\n                            </div>\n                            <span className=\"icon-label\" >Instagram</span>\n                        </div>\n                        <div className=\"icon\">\n                            <div className=\"type github\" >\n                                <div className=\"tooltip\">Github</div>\n                                <span> <AiOutlineGithub style={{ fontSize: '50px' }} /> </span>\n                            </div>\n                            <span className=\"icon-label\" >Github</span>\n                        </div>\n                        <div className=\"icon\">\n                            <div className=\"type youtube\" >\n                                <div className=\"tooltip\">Youtube</div>\n                                <span><AiFillYoutube style={{ fontSize: '50px' }} /></span>\n                            </div>\n                            <span className=\"icon-label\" >Youtube</span>\n                        </div>\n                        <div class=\"vl\"></div>\n                        <div className=\"close-icon icon\" onClick={onClick} >\n                            <div className=\"type\" >\n                                <div className=\"tooltip\">Youtube</div>\n                                <span><AiOutlineClose style={{ fontSize: '50px', color: 'red' }} /></span>\n                            </div>\n                        </div>\n                    </div>\n                </CenterScreen>\n            )}\n        </ReactCircleModal>\n\n    )\n}\n\nexport default CreateModal\n\nconst CenterScreen = styled.div`\n    position: absolute;\n    top: 35%;\n    width: 95rem; \n    height: 100px;\n    display:flex ;\n    justify-content:center; \n    align-items:center; \n`\n","/home/miken/projects/tumblerclone/client/src/shared/UseOnClickOutside.jsx",[],{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":14,"column":9,"nodeType":"137","messageId":"138","endLine":14,"endColumn":12},{"ruleId":"135","severity":1,"message":"139","line":3,"column":10,"nodeType":"137","messageId":"138","endLine":3,"endColumn":19},{"ruleId":"135","severity":1,"message":"140","line":3,"column":21,"nodeType":"137","messageId":"138","endLine":3,"endColumn":27},{"ruleId":"135","severity":1,"message":"141","line":3,"column":29,"nodeType":"137","messageId":"138","endLine":3,"endColumn":32},{"ruleId":"135","severity":1,"message":"142","line":3,"column":34,"nodeType":"137","messageId":"138","endLine":3,"endColumn":45},{"ruleId":"143","severity":1,"message":"144","line":6,"column":1,"nodeType":"145","endLine":71,"endColumn":3},{"ruleId":"146","severity":1,"message":"147","line":6,"column":17,"nodeType":"148","messageId":"149","endLine":6,"endColumn":19},{"ruleId":"150","severity":1,"message":"151","line":9,"column":25,"nodeType":"137","messageId":"152","endLine":9,"endColumn":39},{"ruleId":"153","severity":1,"message":"154","line":45,"column":15,"nodeType":"155","endLine":54,"endColumn":16},{"ruleId":"143","severity":1,"message":"144","line":27,"column":1,"nodeType":"145","endLine":34,"endColumn":2},{"ruleId":"143","severity":1,"message":"144","line":4,"column":1,"nodeType":"145","endLine":21,"endColumn":3},{"ruleId":"143","severity":1,"message":"144","line":77,"column":1,"nodeType":"145","endLine":101,"endColumn":2},{"ruleId":"143","severity":1,"message":"144","line":79,"column":1,"nodeType":"145","endLine":145,"endColumn":3},{"ruleId":"156","severity":1,"message":"157","line":102,"column":6,"nodeType":"158","endLine":102,"endColumn":12,"suggestions":"159"},{"ruleId":"156","severity":1,"message":"160","line":114,"column":6,"nodeType":"158","endLine":114,"endColumn":8,"suggestions":"161"},{"ruleId":"135","severity":1,"message":"162","line":115,"column":9,"nodeType":"137","messageId":"138","endLine":115,"endColumn":20},{"ruleId":"146","severity":1,"message":"147","line":147,"column":25,"nodeType":"148","messageId":"149","endLine":147,"endColumn":27},{"ruleId":"143","severity":1,"message":"144","line":88,"column":1,"nodeType":"145","endLine":126,"endColumn":3},{"ruleId":"146","severity":1,"message":"147","line":88,"column":17,"nodeType":"148","messageId":"149","endLine":88,"endColumn":19},{"ruleId":"135","severity":1,"message":"163","line":1,"column":27,"nodeType":"137","messageId":"138","endLine":1,"endColumn":36},{"ruleId":"135","severity":1,"message":"164","line":1,"column":38,"nodeType":"137","messageId":"138","endLine":1,"endColumn":46},{"ruleId":"165","severity":1,"message":"166","line":40,"column":15,"nodeType":"167","messageId":"149","endLine":40,"endColumn":17},{"ruleId":"135","severity":1,"message":"168","line":3,"column":8,"nodeType":"137","messageId":"138","endLine":3,"endColumn":12},{"ruleId":"143","severity":1,"message":"144","line":66,"column":1,"nodeType":"145","endLine":142,"endColumn":3},{"ruleId":"135","severity":1,"message":"169","line":51,"column":7,"nodeType":"137","messageId":"138","endLine":51,"endColumn":23},{"ruleId":"146","severity":1,"message":"147","line":4,"column":15,"nodeType":"148","messageId":"149","endLine":4,"endColumn":17},{"ruleId":"170","severity":1,"message":"171","line":73,"column":7,"nodeType":"155","messageId":"172","endLine":77,"endColumn":8,"fix":"173"},{"ruleId":"174","severity":1,"message":"175","line":78,"column":9,"nodeType":"155","endLine":78,"endColumn":102},{"ruleId":"170","severity":1,"message":"171","line":80,"column":7,"nodeType":"155","messageId":"172","endLine":84,"endColumn":8,"fix":"176"},{"ruleId":"174","severity":1,"message":"175","line":85,"column":9,"nodeType":"155","endLine":85,"endColumn":90},{"ruleId":"146","severity":1,"message":"147","line":7,"column":22,"nodeType":"148","messageId":"149","endLine":7,"endColumn":25},{"ruleId":"135","severity":1,"message":"177","line":11,"column":12,"nodeType":"137","messageId":"138","endLine":11,"endColumn":21},{"ruleId":"153","severity":1,"message":"178","line":19,"column":17,"nodeType":"155","endLine":19,"endColumn":50},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],"no-unused-vars","'STX' is assigned a value but never used.","Identifier","unusedVar","'Container' is defined but never used.","'Navbar' is defined but never used.","'Nav' is defined but never used.","'NavDropdown' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-const-assign","'toggleDropDown' is constant.","const","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchImages'. Either include it or remove the dependency array.","ArrayExpression",["181"],"React Hook useEffect has a missing dependency: 'loading'. Either include it or remove the dependency array.",["182"],"'listOfItems' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","'Icon' is defined but never used.","'CloseModalButton' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","noTargetBlank",{"range":"183","text":"184"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",{"range":"185","text":"184"},"'showModal' is assigned a value but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},[2364,2364]," rel=\"noreferrer\"",[2617,2617],"Update the dependencies array to be: [fetchImages, page]",{"range":"190","text":"191"},"Update the dependencies array to be: [loading]",{"range":"192","text":"193"},[2169,2175],"[fetchImages, page]",[2505,2507],"[loading]"]